<?php
error_reporting(E_ALL);
ini_set('display_errors', TRUE);
ini_set('display_startup_errors', TRUE);


function sse_describe_help($path, $arg) {
    switch ($path) {
        case "admin/help#sse_describe":
            return '<p>'.t("Displays links to nodes created on this date").'</p>';
            break;
    }
}

function sse_describe_block_info() {
    $blocks['sse_describe'] = array(
        'info' => t('Current posts'),
        'cache' => DRUPAL_CACHE_PER_ROLE,
    );
    return $blocks;
}

function sse_describe_contents($display) {
    $today = getdate();
    $start_time = mktime(0, 0, 0, $today['mon'], ($today['mday'] - 7), $today['year']);
    $end_time = time();

    $max_num =  variable_get('current_posts_max', 3);

    $query = db_select('node', 'n')
        ->fields('n', array('nid', 'title', 'created'))
        ->condition('status', 1)
        ->condition('created', array($start_time, $end_time), 'BETWEEN')
        ->orderBy('created', 'DESC');

    if ($display == 'block') {
        $query->range(0, $max_num);
    }

    return $query->execute();
}

function sse_describe_block_view($delta = '') {
    switch ($delta) {
        case 'sse_describe':
            $block['subject'] = t('Current posts');
            if (user_access('access content')) {
                $result = sse_describe_contents('block');
                $items = array();
                foreach ($result as $node) {
                    $items[] = array(
                        'data' => l($node->title, 'node/'.$node->nid),
                    );
                }
            }

            if (empty($items)) {
                $block['content'] = t('No posts available');
            }
            else {
                $block['content']['posts'] = array(
                    '#theme' => 'item_list__sse_describe__block',
                    '#items' => $items,
                );
                $block['content']['more'] = array(
                    '#theme' => 'more_link__sse_describe',
                    '#url' => 'sse_describe',
                    '#title' => t('See the full list of current posts'),
                );
            }
        return $block;
    }
}

function sse_describe_menu() {
    $items = array();

    $items['admin/config/content/sse_describe'] = array(
        'title' => 'Current posts',
        'description' => 'Configuration for Current posts module',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('sse_describe_form'),
        'access arguments' => array('access administration pages'),
        'type' => MENU_NORMAL_ITEM,
    );

    $items['sse_describe'] = array(
        'title' => 'Current posts',
        'page callback' => '_sse_describe_page',
        'access arguments' => array('access current_posts content'),
        'type' => MENU_CALLBACK,
    );

    return $items;
}

function sse_describe_form($form, &$form_state) {
    $form['current_posts_max'] = array(
        '#type' => 'textfield',
        '#title' => t('Maximum number of posts'),
        '#default_value' => variable_get('current_posts_max', 3),
        '#size' => 2,
        '#maxlength' => 2,
        '#description' => t('The maximum number of links to display in the block.'),
        '#required' => TRUE,
    );

    return system_settings_form($form);
}

function sse_describe_form_validate($form, &$form_state){
    $max_num = $form_state['values']['current_posts_max'];
    if (!is_numeric($max_num)) {
        form_set_error('current_posts_max', t('You must enter a number for the maximum number of posts to display.'));
    } elseif ($max_num <= 0) {
        form_set_error('current_posts_max', t('Maximum number of posts to display must be positive.'));
    }
}

function sse_describe_permission() {
    return array(
        'access sse_describe content' => array(
            'title' => t('Access content for the Current posts module'),
        )
    );
}

function _sse_describe_page() {
    drupal_set_title('Current posts');
    $result = sse_describe_contents('page');

    $items = array();
    foreach ($result as $node) {
        $items[] = array(
            'data' => l($node->title, 'node/'.$node->nid),
        );
    }

    if (empty($items)) {
        $page_array['sse_describe_arguments'] = array(
            '#title' => t('All posts from the last week'),
            '#markup' => t('No posts available'),
        );
        return $page_array;
    } else {
        $page_array['sse_describe_arguments'] = array(
            '#title' => t('All posts from the last week'),
            '#items' => $items,
            '#theme' => 'item_list__sse_describe',
        );
        return $page_array;
    }
}
